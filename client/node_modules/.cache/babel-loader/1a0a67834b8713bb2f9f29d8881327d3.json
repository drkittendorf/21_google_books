{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// // import DeleteBtn from \"../components/DeleteBtn\";\n// import API from \"../utils/API\";\n// // import { Link } from \"react-router-dom\";\n// import { Col, Row, Container } from \"../components/Grid\";\n// // import { List, ListItem } from \"../components/List\";\n// import { Input, TextArea, FormBtn } from \"../components/Form\";\n// function Gbooks() {\n//   // Setting our component's initial state\n//   const [gbooks, setGbooks] = useState([])\n//   const [formObject, setFormObject] = useState({})\n//   // Load all books and store them with setBooks\n//   useEffect(() => {\n//     loadGbooks()\n//   }, [])\n//   // Loads all books and sets them to books\n//   function loadGbooks() {\n//     API.getGbooks()\n//       .then(res => \n//         setGbooks(res.data)\n//       )\n//       .catch(err => console.log(err));\n//   };\n// //   // Deletes a book from the database with a given id, then reloads books from the db\n// //   function deleteBook(id) {\n// //     API.deleteBook(id)\n// //       .then(res => loadBooks())\n// //       .catch(err => console.log(err));\n// //   }\n//   // Handles updating component state when the user types into the input field\n//   function handleInputChange(event) {\n//     const { name, value } = event.target;\n//     setFormObject({...formObject, [name]: value})\n//   };\n//   // When the form is submitted, use the API.saveBook method to save the book data\n//   // Then reload books from the database\n//   function handleFormSubmit(event) {\n//     event.preventDefault();\n//     if (formObject.title && formObject.author) {\n//       API.saveGbook({\n//         title: formObject.title,\n//         author: [formObject.author],\n//         synopsis: formObject.synopsis\n//       })\n//         .then(res => loadGbooks())\n//         .catch(err => console.log(err));\n//     }\n//   };\n//     return (\n//       <Container fluid>\n//         <Row>\n//           <Col size=\"md-6\">\n//               <h1>What book title would you like to add to your list?</h1>\n//             <form>\n//               <Input\n//                 onChange={handleInputChange}\n//                 name=\"title\"\n//                 placeholder=\"Title (required)\"\n//               />\n//               <Input\n//                 onChange={handleInputChange}\n//                 name=\"author\"\n//                 placeholder=\"Author (required)\"\n//               />\n//               <TextArea\n//                 onChange={handleInputChange}\n//                 name=\"synopsis\"\n//                 placeholder=\"Synopsis (Optional)\"\n//               />\n//               <FormBtn\n//                 disabled={!(formObject.author && formObject.title)}\n//                 onClick={handleFormSubmit}\n//               >\n//                 Submit Book\n//               </FormBtn>\n//             </form>\n//           </Col>\n//          </Row>\n//       </Container>\n//     );\n//   }\n// export default Gbooks;","map":{"version":3,"sources":["C:/Users/DaleRKittendorf/Desktop/DRKcodeDRK/UTBootcamp/PROJECTS/google_books/client/src/pages/Gbooks.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA","sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// // import DeleteBtn from \"../components/DeleteBtn\";\r\n// import API from \"../utils/API\";\r\n// // import { Link } from \"react-router-dom\";\r\n// import { Col, Row, Container } from \"../components/Grid\";\r\n// // import { List, ListItem } from \"../components/List\";\r\n// import { Input, TextArea, FormBtn } from \"../components/Form\";\r\n\r\n// function Gbooks() {\r\n//   // Setting our component's initial state\r\n//   const [gbooks, setGbooks] = useState([])\r\n//   const [formObject, setFormObject] = useState({})\r\n\r\n//   // Load all books and store them with setBooks\r\n//   useEffect(() => {\r\n//     loadGbooks()\r\n//   }, [])\r\n\r\n//   // Loads all books and sets them to books\r\n//   function loadGbooks() {\r\n//     API.getGbooks()\r\n//       .then(res => \r\n//         setGbooks(res.data)\r\n//       )\r\n//       .catch(err => console.log(err));\r\n//   };\r\n\r\n// //   // Deletes a book from the database with a given id, then reloads books from the db\r\n// //   function deleteBook(id) {\r\n// //     API.deleteBook(id)\r\n// //       .then(res => loadBooks())\r\n// //       .catch(err => console.log(err));\r\n// //   }\r\n\r\n//   // Handles updating component state when the user types into the input field\r\n//   function handleInputChange(event) {\r\n//     const { name, value } = event.target;\r\n//     setFormObject({...formObject, [name]: value})\r\n//   };\r\n\r\n//   // When the form is submitted, use the API.saveBook method to save the book data\r\n//   // Then reload books from the database\r\n//   function handleFormSubmit(event) {\r\n//     event.preventDefault();\r\n//     if (formObject.title && formObject.author) {\r\n//       API.saveGbook({\r\n//         title: formObject.title,\r\n//         author: [formObject.author],\r\n//         synopsis: formObject.synopsis\r\n//       })\r\n//         .then(res => loadGbooks())\r\n//         .catch(err => console.log(err));\r\n//     }\r\n//   };\r\n\r\n//     return (\r\n//       <Container fluid>\r\n//         <Row>\r\n//           <Col size=\"md-6\">\r\n            \r\n//               <h1>What book title would you like to add to your list?</h1>\r\n            \r\n//             <form>\r\n//               <Input\r\n//                 onChange={handleInputChange}\r\n//                 name=\"title\"\r\n//                 placeholder=\"Title (required)\"\r\n//               />\r\n//               <Input\r\n//                 onChange={handleInputChange}\r\n//                 name=\"author\"\r\n//                 placeholder=\"Author (required)\"\r\n//               />\r\n//               <TextArea\r\n//                 onChange={handleInputChange}\r\n//                 name=\"synopsis\"\r\n//                 placeholder=\"Synopsis (Optional)\"\r\n//               />\r\n//               <FormBtn\r\n//                 disabled={!(formObject.author && formObject.title)}\r\n//                 onClick={handleFormSubmit}\r\n//               >\r\n//                 Submit Book\r\n//               </FormBtn>\r\n//             </form>\r\n//           </Col>\r\n//          </Row>\r\n//       </Container>\r\n//     );\r\n//   }\r\n\r\n\r\n// export default Gbooks;\r\n"]},"metadata":{},"sourceType":"module"}