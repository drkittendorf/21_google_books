{"ast":null,"code":"import _slicedToArray from \"C:/Users/DaleRKittendorf/Desktop/DRKcodeDRK/UTBootcamp/PROJECTS/google_books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\DaleRKittendorf\\\\Desktop\\\\DRKcodeDRK\\\\UTBootcamp\\\\PROJECTS\\\\google_books\\\\client\\\\src\\\\pages\\\\Bookslist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn/booksdel\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Bookslist() {\n  _s();\n\n  var _this = this;\n\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gbooks = _useState4[0],\n      setGbooks = _useState4[1]; //! Load all saved books and store them with setBooks\n\n\n  useEffect(function () {\n    loadBooks();\n  }, []);\n  useEffect(function () {\n    loadGbooks();\n  }, []); //! Loads all books and sets them to books or Gbooks\n\n  function loadBooks() {\n    API.getBooks().then(function (res) {\n      return setBooks(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ;\n\n  function loadGbooks() {\n    API.getGbooks().then(function (res) {\n      console.log(\"console from Bookslist.js\", res);\n      setGbooks(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ; //! Deletes a book or Google Book from the database / Book List with a given id, then reloads the remaining books from the db\n\n  function deleteBook(id) {\n    API.deleteBook(id).then(function (res) {\n      return loadBooks();\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  function deleteGbook(id) {\n    API.deleteGbook(id).then(function (res) {\n      return loadGbooks();\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        size: \"md-6 sm-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Books Added Manually to the List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), books.length ? /*#__PURE__*/_jsxDEV(List, {\n          children: books.map(function (book) {\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: '/books/' + book._id,\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [book.title, \" by \", book.author]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(DeleteBtn, {\n                onClick: function onClick() {\n                  return deleteBook(book._id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, _this)]\n            }, book._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No Results to Display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        size: \"md-6 sm-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Books added from Google Books\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 14\n        }, this), gbooks.length ? /*#__PURE__*/_jsxDEV(List, {\n          children: gbooks.map(function (gbook) {\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: '/gbooks/' + gbook._id,\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [gbook.title, \" by \", gbook.authors, console.log(\"console logging book\", gbook)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(DeleteBtn, {\n                onClick: function onClick() {\n                  return deleteGbook(gbook._id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, _this)]\n            }, gbook._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No Google Books have been added to the list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Bookslist, \"5FblCD+a4AF4E1JMlCZzwo+y9V4=\");\n\n_c = Bookslist;\nexport default Bookslist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bookslist\");","map":{"version":3,"sources":["C:/Users/DaleRKittendorf/Desktop/DRKcodeDRK/UTBootcamp/PROJECTS/google_books/client/src/pages/Bookslist.js"],"names":["React","useState","useEffect","DeleteBtn","API","Link","Col","Row","Container","List","ListItem","Bookslist","books","setBooks","gbooks","setGbooks","loadBooks","loadGbooks","getBooks","then","res","data","catch","err","console","log","getGbooks","deleteBook","id","deleteGbook","length","map","book","_id","title","author","gbook","authors"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport DeleteBtn from \"../components/DeleteBtn/booksdel\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\n\r\n\r\nfunction Bookslist() {\r\n  // Setting our component's initial state\r\n  const [books, setBooks] = useState([])\r\n  const [gbooks, setGbooks] = useState([])\r\n  \r\n  //! Load all saved books and store them with setBooks\r\n  useEffect(() => {\r\n    loadBooks()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    loadGbooks()\r\n  }, [])\r\n\r\n\r\n  //! Loads all books and sets them to books or Gbooks\r\n  function loadBooks() {\r\n    API.getBooks()\r\n      .then(res => \r\n        setBooks(res.data)\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n   \r\n  function loadGbooks() {\r\n    API.getGbooks()\r\n      .then(res => \r\n        {console.log(\"console from Bookslist.js\", res)\r\n        setGbooks(res.data)\r\n        })\r\n\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  //! Deletes a book or Google Book from the database / Book List with a given id, then reloads the remaining books from the db\r\n  function deleteBook(id) {\r\n    API.deleteBook(id)\r\n      .then(res => loadBooks())\r\n      .catch(err => console.log(err));\r\n  }\r\n  \r\n  function deleteGbook(id) {\r\n    API.deleteGbook(id)\r\n      .then(res => loadGbooks())\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-6 sm-12\">\r\n              <h2>Books Added Manually to the List</h2>\r\n            \r\n            {books.length ? (\r\n              <List>\r\n                {books.map(book => (\r\n                  <ListItem key={book._id}>\r\n                    <Link to={'/books/' + book._id}>\r\n                      <strong>\r\n                        {book.title} by {book.author} \r\n                           \r\n                      </strong>\r\n                    </Link>\r\n                    <DeleteBtn onClick={() => deleteBook(book._id)} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            ) : (\r\n              <h3>No Results to Display</h3>\r\n            )}\r\n            </Col>\r\n            \r\n            <Col size=\"md-6 sm-12\">\r\n             <h2>Books added from Google Books</h2>\r\n             {gbooks.length ? (\r\n              <List>\r\n                {gbooks.map(gbook => (\r\n                  <ListItem key={gbook._id}>\r\n                    <Link to={'/gbooks/' + gbook._id}>\r\n                      <strong>\r\n                        {gbook.title} by {gbook.authors}\r\n                        {console.log(\"console logging book\", gbook)} \r\n                      </strong>\r\n                    </Link>\r\n                    <DeleteBtn onClick={() => deleteGbook(gbook._id)} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            ) : (\r\n              <h3>No Google Books have been added to the list</h3>\r\n            )}\r\n\r\n\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n\r\nexport default Bookslist;\r\n"]},"metadata":{},"sourceType":"module"}