{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\DaleRKittendorf\\\\Desktop\\\\DRKcodeDRK\\\\UTBootcamp\\\\PROJECTS\\\\google_books\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\DaleRKittendorf\\\\Desktop\\\\DRKcodeDRK\\\\UTBootcamp\\\\PROJECTS\\\\google_books\\\\client\\\\src\\\\pages\\\\Bookslist.js\";\nimport React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn/booksdel\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\n\nfunction Bookslist() {\n  var _this = this;\n\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gbooks = _useState4[0],\n      setGbooks = _useState4[1]; //! Load all saved books and store them with setBooks\n\n\n  useEffect(function () {\n    loadBooks();\n  }, []);\n  useEffect(function () {\n    loadGbooks();\n  }, []); //! Loads all books and sets them to books or Gbooks\n\n  function loadBooks() {\n    API.getBooks().then(function (res) {\n      return setBooks(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ;\n\n  function loadGbooks() {\n    API.getGbooks().then(function (res) {\n      return setGbooks(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ; //! Deletes a book or from the database with a given id, then reloads books from the db\n\n  function deleteBook(id) {\n    API.deleteBook(id).then(function (res) {\n      return loadBooks();\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  function deleteGbook(id) {\n    API.deleteGbook(id).then(function (res) {\n      return loadGbooks();\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6 sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"Books Added Manually to the List\"), books.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, books.map(function (book) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: book._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: '/books/' + book._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }\n    }, book.title, \" by \", book.author)), /*#__PURE__*/React.createElement(DeleteBtn, {\n      onClick: function onClick() {\n        return deleteBook(book._id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }));\n  })) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"No Results to Display\")), /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6 sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 14\n    }\n  }, \"Books added from Google Books\"), gbooks.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, gbooks.map(function (gbook) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: gbook._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: '/gbooks/' + gbook._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }\n    }, gbook.title, \" by \", gbook.authors)), /*#__PURE__*/React.createElement(DeleteBtn, {\n      onClick: function onClick() {\n        return deleteGbook(gbook._id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }));\n  })) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"No Google Books have been added to the list\"))));\n}\n\nexport default Bookslist;","map":{"version":3,"sources":["C:/Users/DaleRKittendorf/Desktop/DRKcodeDRK/UTBootcamp/PROJECTS/google_books/client/src/pages/Bookslist.js"],"names":["React","useState","useEffect","DeleteBtn","API","Link","Col","Row","Container","List","ListItem","Bookslist","books","setBooks","gbooks","setGbooks","loadBooks","loadGbooks","getBooks","then","res","data","catch","err","console","log","getGbooks","deleteBook","id","deleteGbook","length","map","book","_id","title","author","gbook","authors"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport DeleteBtn from \"../components/DeleteBtn/booksdel\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\n\r\n\r\nfunction Bookslist() {\r\n  // Setting our component's initial state\r\n  const [books, setBooks] = useState([])\r\n  const [gbooks, setGbooks] = useState([])\r\n  \r\n  //! Load all saved books and store them with setBooks\r\n  useEffect(() => {\r\n    loadBooks()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    loadGbooks()\r\n  }, [])\r\n\r\n\r\n  //! Loads all books and sets them to books or Gbooks\r\n  function loadBooks() {\r\n    API.getBooks()\r\n      .then(res => \r\n        setBooks(res.data)\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n   \r\n  function loadGbooks() {\r\n    API.getGbooks()\r\n      .then(res => \r\n        setGbooks(res.data)\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  //! Deletes a book or from the database with a given id, then reloads books from the db\r\n  function deleteBook(id) {\r\n    API.deleteBook(id)\r\n      .then(res => loadBooks())\r\n      .catch(err => console.log(err));\r\n  }\r\n  \r\n  function deleteGbook(id) {\r\n    API.deleteGbook(id)\r\n      .then(res => loadGbooks())\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n\r\n\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-6 sm-12\">\r\n            \r\n              <h1>Books Added Manually to the List</h1>\r\n            \r\n            {books.length ? (\r\n              <List>\r\n                {books.map(book => (\r\n                  <ListItem key={book._id}>\r\n                    <Link to={'/books/' + book._id}>\r\n                      <strong>\r\n                        {book.title} by {book.author}\r\n                      </strong>\r\n                    </Link>\r\n                    <DeleteBtn onClick={() => deleteBook(book._id)} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            ) : (\r\n              <h3>No Results to Display</h3>\r\n            )}\r\n            </Col>\r\n            \r\n            <Col size=\"md-6 sm-12\">\r\n             <h1>Books added from Google Books</h1>\r\n             {gbooks.length ? (\r\n              <List>\r\n                {gbooks.map(gbook => (\r\n                  <ListItem key={gbook._id}>\r\n                    <Link to={'/gbooks/' + gbook._id}>\r\n                      <strong>\r\n                        {gbook.title} by {gbook.authors}\r\n                      </strong>\r\n                    </Link>\r\n                    <DeleteBtn onClick={() => deleteGbook(gbook._id)} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            ) : (\r\n              <h3>No Google Books have been added to the list</h3>\r\n            )}\r\n\r\n\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n\r\nexport default Bookslist;\r\n"]},"metadata":{},"sourceType":"module"}