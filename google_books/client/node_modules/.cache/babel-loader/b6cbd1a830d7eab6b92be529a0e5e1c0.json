{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DaleRKittendorf\\\\Desktop\\\\DRKcodeDRK\\\\UTBootcamp\\\\PROJECTS\\\\google_books\\\\google_books\\\\client\\\\src\\\\pages\\\\Search.js\";\n\n//! Add code here to be search page for google books \n//* Search - User can search for books via the Google Books API and render them here. User has the option to \n//*\"View\" a book, bringing them to the book on Google Books, or \"Save\" a book, saving it to the Mongo database.\n//* The layout should include at least two React Components for each page Search and Saved.\n// When the form is submitted, use the API.saveBook method to save the book data\n// Then reload books from the database\n//   function handleFormSubmit(event) {\n//     event.preventDefault();\n//     if (formObject.title && formObject.author) {\n//       API.saveGbook({\n//         title: formGobject.title,\n//         author: formGobject.author,\n//         synopsis: formGobject.synopsis\n//       })\n//         .then(res => loadGbooks())\n//         .catch(err => console.log(err));\n//     }\n//   };\n//     return (\n//       <Container fluid>\n//         <Row>\n//           <Col size=\"md-6\">\n//             <Jumbotron>\n//               <h1>What Books Should I Read?</h1>\n//             </Jumbotron>\n//             <form>\n//               <Input\n//                 onChange={handleInputChange}\n//                 name=\"title\"\n//                 placeholder=\"Title (required)\"\n//               />\n//               <Input\n//                 onChange={handleInputChange}\n//                 name=\"author\"\n//                 placeholder=\"Author (required)\"\n//               />\n//               <TextArea\n//                 onChange={handleInputChange}\n//                 name=\"synopsis\"\n//                 placeholder=\"Synopsis (Optional)\"\n//               />\n//               <FormBtn\n//                 disabled={!(formGobject.author && formGobject.title)}\n//                 onClick={handleFormSubmit}\n//               >\n//                 Submit Book\n//               </FormBtn>\n//             </form>\n//           </Col>\n//           <Col size=\"md-6 sm-12\">\n//             <Jumbotron>\n//               <h1>Books On My List</h1>\n//             </Jumbotron>\n//             {gbooks.length ? (\n//               <List>\n//                 {gbooks.map(gbook => (\n//                   <ListItem key={gbook._id}>\n//                     <Link to={\"/gbooks/\" + gbook._id}>\n//                       <strong>\n//                         {gbook.title} by {gbook.author}\n//                       </strong>\n//                     </Link>\n//                     <DeleteBtn onClick={() => deleteGbook(gbook._id)} />\n//                   </ListItem>\n//                 ))}\n//               </List>\n//             ) : (\n//               <h3>No Results to Display</h3>\n//             )}\n//           </Col>\n//         </Row>\n//       </Container>\n//     );\n//   }\n// export default Gbooks;\nimport React from 'react';\n\nvar Search = function Search() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 16\n    }\n  }, \"SEARCH GOOGLE BOOKS\")));\n};\n\nexport default Search;","map":{"version":3,"sources":["C:/Users/DaleRKittendorf/Desktop/DRKcodeDRK/UTBootcamp/PROJECTS/google_books/google_books/client/src/pages/Search.js"],"names":["React","Search"],"mappings":";;;AAAA;AACA;AACA;AACA;AAEA;AACE;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAClB,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,MAAM,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,CADJ,CADJ;AAUF,CAXD;;AAYA,eAAeA,MAAf","sourcesContent":["//! Add code here to be search page for google books \r\n//* Search - User can search for books via the Google Books API and render them here. User has the option to \r\n//*\"View\" a book, bringing them to the book on Google Books, or \"Save\" a book, saving it to the Mongo database.\r\n//* The layout should include at least two React Components for each page Search and Saved.\r\n\r\n// When the form is submitted, use the API.saveBook method to save the book data\r\n  // Then reload books from the database\r\n\r\n//   function handleFormSubmit(event) {\r\n//     event.preventDefault();\r\n//     if (formObject.title && formObject.author) {\r\n//       API.saveGbook({\r\n//         title: formGobject.title,\r\n//         author: formGobject.author,\r\n//         synopsis: formGobject.synopsis\r\n//       })\r\n//         .then(res => loadGbooks())\r\n//         .catch(err => console.log(err));\r\n//     }\r\n//   };\r\n\r\n//     return (\r\n//       <Container fluid>\r\n//         <Row>\r\n//           <Col size=\"md-6\">\r\n//             <Jumbotron>\r\n//               <h1>What Books Should I Read?</h1>\r\n//             </Jumbotron>\r\n//             <form>\r\n//               <Input\r\n//                 onChange={handleInputChange}\r\n//                 name=\"title\"\r\n//                 placeholder=\"Title (required)\"\r\n//               />\r\n//               <Input\r\n//                 onChange={handleInputChange}\r\n//                 name=\"author\"\r\n//                 placeholder=\"Author (required)\"\r\n//               />\r\n//               <TextArea\r\n//                 onChange={handleInputChange}\r\n//                 name=\"synopsis\"\r\n//                 placeholder=\"Synopsis (Optional)\"\r\n//               />\r\n//               <FormBtn\r\n//                 disabled={!(formGobject.author && formGobject.title)}\r\n//                 onClick={handleFormSubmit}\r\n//               >\r\n//                 Submit Book\r\n//               </FormBtn>\r\n//             </form>\r\n//           </Col>\r\n//           <Col size=\"md-6 sm-12\">\r\n//             <Jumbotron>\r\n//               <h1>Books On My List</h1>\r\n//             </Jumbotron>\r\n//             {gbooks.length ? (\r\n//               <List>\r\n//                 {gbooks.map(gbook => (\r\n//                   <ListItem key={gbook._id}>\r\n//                     <Link to={\"/gbooks/\" + gbook._id}>\r\n//                       <strong>\r\n//                         {gbook.title} by {gbook.author}\r\n//                       </strong>\r\n//                     </Link>\r\n//                     <DeleteBtn onClick={() => deleteGbook(gbook._id)} />\r\n//                   </ListItem>\r\n//                 ))}\r\n//               </List>\r\n//             ) : (\r\n//               <h3>No Results to Display</h3>\r\n//             )}\r\n//           </Col>\r\n//         </Row>\r\n//       </Container>\r\n//     );\r\n//   }\r\n\r\n\r\n// export default Gbooks;\r\n\r\nimport React from 'react';\r\n\r\n\r\nconst Search = () => {\r\n   return (\r\n       <div className='search-form'>\r\n           <form action=''>\r\n               <input type='text'/>\r\n               <button type=\"submit\">SEARCH GOOGLE BOOKS</button>\r\n            \r\n           </form>\r\n       </div>\r\n   )\r\n\r\n}\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}